{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,y2CAA0yC,eAAe,iD;;;;;;;;;;;;;;;;;;;ACA/xC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AAW3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACnB7B;AAAe,mEAAI,wBAAwB,GAAG,6CAA6C,2a;;;;;;;;;;;;;;;;;;;ACAzC;AACT;AACe;AAGxD,uDAAuD;AAMvD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAMnB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAF3D,WAAM,GAAW,EAAE,CAAC,CAAC,yGAAyG;IAE/D,CAAC;IAEhE,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IACD;;;MAGE;IACF,MAAM;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,WAAW,CAAC,KAAK;QACb,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;CAEJ;;YArB+B,sDAAM;YAAe,gEAAU;;AANlD,UAAU;IALtB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kNAAiC;;KAEpC,CAAC;2EAO8B,sDAAM,EAAe,gEAAU;GANlD,UAAU,CA2BtB;AA3BsB","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<!--Similar to characters. view characters for references-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"tertiary\\\">\\n\\t\\t<ion-title class=\\\"ion-text-center\\\">Quotes</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-card>\\n\\t\\t<p>You can see all the quotes from a character by search their names.</p>\\n\\t</ion-card>\\n\\t<!--The search bar is created using a feature from the ionic application called ion-searchbar\\n    It is going to accept an name and is going to pass the information for the search method and so on. The placeholder is the text displayed in the search bar\\n    and the cancel button clears the written name from the search bar-->\\n\\t<ion-searchbar [(ngModel)]=\\\"author\\\" (ionChange)=\\\"search($event)\\\" placeholder=\\\"Search by author's name\\\"\\n\\t\\t[showCancelButton]=\\\"shouldShowCancel\\\"></ion-searchbar>\\n\\t<!--In the beginning I had problems with the search. I used ionInput instead of ionChange\\n    This resulted in a error in which I could not obtain the whole list after quering a name. The ionChange solve that, so now is possible to search for a name and when erase it see the whole list of quotes again-->\\n\\n\\t<ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t<!--Show list of quotes-->\\n\\t\\t\\t{{ quote.quote }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"p {\\n  text-align: justify;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvbW9iZGV2LTIwMTkxNTFDQTIvc3JjL2FwcC9wYWdlcy9xdW90ZXMvcXVvdGVzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcXVvdGVzL3F1b3Rlcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcXVvdGVzL3F1b3Rlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwe1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG59IiwicCB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { Observable } from 'rxjs';\n\n//Similar to characters. view characters for references\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    quotes: Observable<any>;\n    quote: any; //variable created for the search method\n    author: string = ''; //variable created for the search method, this variable will store the character's name typed by the user\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n            console.log('my data', data);\n        });\n    }\n    /*This page has in additional a search method \n     * It will call the method searchQoute to look for a match between the name typed by the user and the character author's name\n     * it will look for it inside the array quotes\n    */\n    search() {\n        this.quotes = this.api.searchQuote(this.author);\n    }\n\n    openDetails(quote) {\n        let quoteId = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}