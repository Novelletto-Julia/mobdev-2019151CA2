{"version":3,"sources":["./src/app/pages/characters/characters.page.html","./src/app/pages/characters/characters-routing.module.ts","./src/app/pages/characters/characters.module.ts","./src/app/pages/characters/characters.page.scss","./src/app/pages/characters/characters.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0hCAA29B,iBAAiB,oBAAoB,mBAAmB,spB;;;;;;;;;;;;;;;;;;;ACAz/B;AACc;AAEJ;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE6B;AAEvB;AAWnD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,sFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,+DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;ACnBjC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;ACAX;AACT;AACe;AAExD;;EAEE;AACF,mEAAmE;AAMnE,IAAa,cAAc,GAA3B,MAAa,cAAc;IAQvB,iLAAiL;IAEjL,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAR3D,gEAAgE;QAChE,eAAU,GAAG,EAAE,CAAC;QAGhB,eAAe;QACf,SAAI,GAAG,CAAC,CAAC;IAGsD,CAAC;IAEhE,QAAQ;QAEJ,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,uDAAuD;IAClF,CAAC;IACD,oGAAoG;IACpG,cAAc,CAAC,KAAM;QAGjB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE/C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAC/B,yIAAyI;YAEzI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAG/C,IAAI,KAAK,EAAE;gBACP,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,qEAAoE;aAC/F;QACL,CAAC,CAAC;IACN,CAAC;IACD,6FAA6F;IAC7F,yFAAyF;IACzF,QAAQ,CAAC,KAAM;QAEX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAG3B,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE;YACvB,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SAChC;IACL,CAAC;IAED,8JAA8J;IAC9J,WAAW,CAAC,SAAS;QACjB,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,+EAA+E;QACpH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,WAAW,EAAE,CAAC,CAAC;IACjE,CAAC;CAEJ;;YA3C+B,sDAAM;YAAe,gEAAU;;AAVlD,cAAc;IAL1B,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,8NAAqC;;KAExC,CAAC;2EAW8B,sDAAM,EAAe,gEAAU;GAVlD,cAAc,CAqD1B;AArD0B","file":"characters-characters-module-es2015.js","sourcesContent":["export default \"<!--All the data for this app was retrived using the Breaking bad api (ref: https://breakingbadapi.com/) \\nfor structure this app, pages and some of the logic, I used the classes and presentations provided by Mikhail Timofeev\\nthis structure is similar for the others pages (that are not details)-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"tertiary\\\">\\n\\t\\t<!--Styling in line-->\\n\\t\\t<ion-title class=\\\"ion-text-center\\\">Characters</ion-title>\\n\\t\\t<!---This is the title of the tab selected-->\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<!--This list will call all the characters existent in the array-->\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t<!--This is displayed as a button that when clicked access the details page-->\\n\\t\\t\\t<!--The function avatar makes possible display images infront of the names of each caracter-->\\n\\t\\t\\t<ion-avatar slot=\\\"start\\\"><img src=\\\"{{ character.img }}\\\"> </ion-avatar> {{  character.name }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\n\\t<!--Html code for infinit scrool\\n    * The threshold tells the limit you have to ative to start loading new characters\\n    *5% will scroll almost to the end of the page for than start loading again\\n    * ref: Simon Grimm (https://www.youtube.com/watch?v=NBeExE9dvR0)-->\\n\\t<ion-infinite-scroll threshold=\\\"5%\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more characters...\\\">\\n\\t\\t\\t<!--loading text will be displayed while te information is accessed in the api-->\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersPageRoutingModule\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { Observable } from 'rxjs';\n/*All the data for this app was retrived using the Breaking bad api (ref: https://breakingbadapi.com/) \n*for structure this app, pages and some of the logic, I used the classes and presentations provided by Mikhail Timofeev\n*/\n//In the component all pages related to the characters are linked. \n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n\n    //Creation of an array to organize the characters taken from API\n    characters = [];\n    //In total, as described in the breaking bad API documentation, there are 63 character\n    charactersTotal: 63;\n    //Starting page\n    page = 0;\n    //This variables are important to implement the infinit scroll method, To create the logic I based on the video of Simon Grimm (ref: https://www.youtube.com/watch?v=NBeExE9dvR0)\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n\n        this.loadCharacters(); //In the main method the loadCharactes method is called\n    }\n    //The paramenter event is linked in the html code. that will result in the activation of this method\n    loadCharacters(event?) {\n\n\n        this.api.getCharacters(this.page).subscribe(data => {\n\n            console.log('my data: ', data);\n            //This method will separate the whole array in many pages. This pages contain the quantity of characters selected in the load more method\n\n            this.characters = this.characters.concat(data);\n\n\n            if (event) {\n                event.target.complete();//This method will load only the amount of the characters selected. \n            }\n        })\n    }\n    //After load 20 character the page stops, it will not load more until this function is called\n    //when this function will be called is told by the 'threshold=\"5%\"' code in the html file\n    loadMore(event?) {\n\n        this.page = this.page + 20;\n\n        this.loadCharacters(event);\n\n\n        if (this.page > this.page) {\n            event.target.disabled = true;\n        }\n    }\n\n    //OpenDetails allows me to select one character of the list and them generate a new page (characterDetails) that will contain all the details of the character\n    openDetails(character) {\n        let characterId = character.char_id; //the character selected is passed to the api where the char_id is look into it\n        this.router.navigateByUrl(`/tabs/characters/${characterId}`);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}