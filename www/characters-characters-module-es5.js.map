{"version":3,"sources":["src/app/pages/characters/characters.page.html","src/app/pages/characters/characters-routing.module.ts","src/app/pages/characters/characters.module.ts","src/app/pages/characters/characters.page.scss","src/app/pages/characters/characters.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!--All the data for this app was retrived using the Breaking bad api (ref: https://breakingbadapi.com/) \\nfor structure this app, pages and some of the logic, I used the classes and presentations provided by Mikhail Timofeev\\nthis structure is similar for the others pages (that are not details)-->\\n<ion-header>\\n\\t<ion-toolbar color=\\\"tertiary\\\">\\n\\t\\t<!--Styling in line-->\\n\\t\\t<ion-title class=\\\"ion-text-center\\\">Characters</ion-title>\\n\\t\\t<!---This is the title of the tab selected-->\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<!--This list will call all the characters existent in the array-->\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t<!--This is displayed as a button that when clicked access the details page-->\\n\\t\\t\\t<!--The function avatar makes possible display images infront of the names of each caracter-->\\n\\t\\t\\t<ion-avatar slot=\\\"start\\\"><img src=\\\"{{ character.img }}\\\"> </ion-avatar> {{  character.name }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\n\\t<!--Html code for infinit scrool\\n    * The threshold tells the limit you have to ative to start loading new characters\\n    *5% will scroll almost to the end of the page for than start loading again\\n    * ref: Simon Grimm (https://www.youtube.com/watch?v=NBeExE9dvR0)-->\\n\\t<ion-infinite-scroll threshold=\\\"5%\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more characters...\\\">\\n\\t\\t\\t<!--loading text will be displayed while te information is accessed in the api-->\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersPageRoutingModule\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { Observable } from 'rxjs';\n/*All the data for this app was retrived using the Breaking bad api (ref: https://breakingbadapi.com/) \n*for structure this app, pages and some of the logic, I used the classes and presentations provided by Mikhail Timofeev\n*/\n//In the component all pages related to the characters are linked. \n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n\n    //Creation of an array to organize the characters taken from API\n    characters = [];\n    //In total, as described in the breaking bad API documentation, there are 63 character\n    charactersTotal: 63;\n    //Starting page\n    page = 0;\n    //This variables are important to implement the infinit scroll method, To create the logic I based on the video of Simon Grimm (ref: https://www.youtube.com/watch?v=NBeExE9dvR0)\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n\n        this.loadCharacters(); //In the main method the loadCharactes method is called\n    }\n    //The paramenter event is linked in the html code. that will result in the activation of this method\n    loadCharacters(event?) {\n\n\n        this.api.getCharacters(this.page).subscribe(data => {\n\n            console.log('my data: ', data);\n            //This method will separate the whole array in many pages. This pages contain the quantity of characters selected in the load more method\n\n            this.characters = this.characters.concat(data);\n\n\n            if (event) {\n                event.target.complete();//This method will load only the amount of the characters selected. \n            }\n        })\n    }\n    //After load 20 character the page stops, it will not load more until this function is called\n    //when this function will be called is told by the 'threshold=\"5%\"' code in the html file\n    loadMore(event?) {\n\n        this.page = this.page + 20;\n\n        this.loadCharacters(event);\n\n\n        if (this.page > this.page) {\n            event.target.disabled = true;\n        }\n    }\n\n    //OpenDetails allows me to select one character of the list and them generate a new page (characterDetails) that will contain all the details of the character\n    openDetails(character) {\n        let characterId = character.char_id; //the character selected is passed to the api where the char_id is look into it\n        this.router.navigateByUrl(`/tabs/characters/${characterId}`);\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"characters-characters-module-es5.js"}