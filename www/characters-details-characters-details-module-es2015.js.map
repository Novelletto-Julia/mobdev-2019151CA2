{"version":3,"sources":["./src/app/pages/characters-details/characters-details.page.html","./src/app/pages/characters-details/characters-details-routing.module.ts","./src/app/pages/characters-details/characters-details.module.ts","./src/app/pages/characters-details/characters-details.page.scss","./src/app/pages/characters-details/characters-details.page.ts","./src/app/services/favourite-char.service.ts"],"names":[],"mappings":"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","file":"characters-details-characters-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<!--The toolbar will have information as the button to go back to characters, name of the character and the favorite button -->\\n\\t<ion-toolbar>\\n\\t\\t<ion-button slot=\\\"start\\\">\\n\\t\\t\\t<!--The slot select the place in which the button will apper, start is at left, end is right-->\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/characters\\\"></ion-back-button>\\n\\t\\t</ion-button>\\n\\t\\t<!--The title in this case is the character name, variable passed from the characters page-->\\n\\t\\t<ion-title class=\\\"ion-text-center\\\">{{ character?.name }}</ion-title>\\n\\t\\t<ion-buttons slot=\\\"end\\\">\\n\\t\\t\\t<!--this buttons favorite and unfavorite is responsable to activate the favorites methods and store the option chose for each character-->\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteCharacter()\\\" *ngIf=\\\"isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"heart\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t\\t<ion-button (click)=\\\"favouriteCharacter()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<!--In here they call the method and define if it is favorite or not, in the case, not favorite-->\\n\\t\\t\\t\\t<ion-icon name=\\\"heart-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<!--This call the method to get information from the api, after that is possible to display information using the variable name from the api-->\\n\\t<ion-card *ngIf=\\\"character\\\">\\n\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<img src=\\\"{{ character.img }}\\\" class=\\\"center\\\">\\n\\t\\t\\t<!--Display the image of each character-->\\n\\t\\t</ion-card-content>\\n\\n\\t\\t<!--name and other details. The details will be different from each page of course-->\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<p> <b><u>Nickname:</u></b> {{ character.nickname }} </p>\\n\\t\\t</ion-card-content>\\n\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<p><b><u>Birthday:</u></b> {{ character.birthday }} </p>\\n\\t\\t</ion-card-content>\\n\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<p> <b><u>Occupation:</u></b> {{ character.occupation }} </p>\\n\\t\\t</ion-card-content>\\n\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<p> <b><u>Dead or Alive:</u></b> {{ character.status }} </p>\\n\\t\\t</ion-card-content>\\n\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<p> <b><u>Actor/Actress:</u></b> {{ character.portrayed }} </p>\\n\\t\\t</ion-card-content>\\n\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersDetailsPage } from './characters-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CharactersDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersDetailsPageRoutingModule } from './characters-details-routing.module';\n\nimport { CharactersDetailsPage } from './characters-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CharactersDetailsPageRoutingModule\n  ],\n  declarations: [CharactersDetailsPage]\n})\nexport class CharactersDetailsPageModule {}\n","export default \"/*This is the style thatis specific for this page\\n *all stiling of the image that this page contain is in here\\n */\\nimg {\\n  border: 2px solid var(--ion-color-secondary);\\n  border-radius: 8px;\\n  width: 100%;\\n  height: auto;\\n}\\nion-icon {\\n  color: var(--ion-color-primary);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvbW9iZGV2LTIwMTkxNTFDQTIvc3JjL2FwcC9wYWdlcy9jaGFyYWN0ZXJzLWRldGFpbHMvY2hhcmFjdGVycy1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvY2hhcmFjdGVycy1kZXRhaWxzL2NoYXJhY3RlcnMtZGV0YWlscy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBQUE7QUFHQTtFQUNJLDRDQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ0NKO0FERUE7RUFDSSwrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY2hhcmFjdGVycy1kZXRhaWxzL2NoYXJhY3RlcnMtZGV0YWlscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlRoaXMgaXMgdGhlIHN0eWxlIHRoYXRpcyBzcGVjaWZpYyBmb3IgdGhpcyBwYWdlXG4gKmFsbCBzdGlsaW5nIG9mIHRoZSBpbWFnZSB0aGF0IHRoaXMgcGFnZSBjb250YWluIGlzIGluIGhlcmVcbiAqL1xuaW1nIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTsgLy9JIHVzZWQgVzMgU2Nob29scyBmb3IgY3NzIHN0eWxpbmcgZ3VpZGVsaW5lc1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG4vL0lvbi1pY29uIGlzIHN0eWxlZCBpbiBhbGwgeHh4LmRldGFpbHMucGFnZS5zY3NzcyBhcyBhbGwgb2YgdGhlbSBjb250YWluIHRoZSBzYW1lIGljb25cbmlvbi1pY29ue1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7IFxufVxuXG4iLCIvKlRoaXMgaXMgdGhlIHN0eWxlIHRoYXRpcyBzcGVjaWZpYyBmb3IgdGhpcyBwYWdlXG4gKmFsbCBzdGlsaW5nIG9mIHRoZSBpbWFnZSB0aGF0IHRoaXMgcGFnZSBjb250YWluIGlzIGluIGhlcmVcbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuaW9uLWljb24ge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { FavouriteCharService } from './../../services/favourite-char.service';\n\n@Component({\n    selector: 'app-characters-details',\n    templateUrl: './characters-details.page.html',\n    styleUrls: ['./characters-details.page.scss'],\n})\nexport class CharactersDetailsPage implements OnInit {\n\n    //Inicialization of the variables used in the methods\n    character: any; //character that will be selected\n    characterId = null; //id of selected character\n    isFavourite = false; //this character is selected as a favorite or not\n    //is important this variable start as false, othewise all characters start as favorite\n\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteCharService: FavouriteCharService) { }\n\n    ngOnInit() {\n        /*This is the main block \n         *In here the information of the character id selecte in the page characters will be passed\n         */\n        this.characterId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        this.api.getCharacter(this.characterId).subscribe(res => { //having this id the getCharacter method is called\n            this.character = res[0];\n\n            console.log(JSON.stringify(this.character.char_id));// and this character chooosen must be displayed in the screen\n            //In the characterDetails.html will be request all the information from the character thar should be displayed\n        });\n\n        //Also in the main method the favorit service is called.\n        this.favouriteCharService.isFavourite(this.characterId).then(isFav => {\n            this.isFavourite = isFav;\n        });\n    }\n    //This methods works in the case the user select the character as favorite\n    favouriteCharacter() {\n        this.favouriteCharService.favouriteCharacter(this.characterId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n    //This method works in case the user select the chacter as not favorit\n    unfavouriteCharacter() {\n        this.favouriteCharService.unfavouriteCharacter(this.characterId).then(() => {\n            this.isFavourite = false;\n        });\n        //This two methods work togheter, this create the opition to select as favorite and then if change you mind change for not favorite\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n//To build the logic of favorite system I used the classes and presentations provided by Mikhail Timofeev\n//I create one favorite page for each details page. All the logic is the same for all pages\n/* First of all a storage was created in the ionic\n* and a variable to store the value that must be add in the storage (STORAGE_KEY)\n*/\nconst STORAGE_KEY = 'favouriteCharacter';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavouriteCharService {\n    //The storage will be called in the constructor \n    constructor(private storage: Storage) { }\n    //This method makes possible to get all save as favorite. This is important to check if a character is favorite already, if this is the case, on click it must \n    //turn not favorite anymore, the reverse is also true\n    getAllFavouriteCharacters() {\n        return this.storage.get(STORAGE_KEY);\n    }\n    //This method will check is the character is already favorite. As explained above, it will use the method get all the favorite for that\n    isFavourite(charId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            return result && result.indexOf(charId) !== -1;\n        });\n    }\n    //This method will will the character in faorite, it is possible when the character is not yet favorite\n    favouriteCharacter(charId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            if (result) {\n                result.push(charId);\n                return this.storage.set(STORAGE_KEY, result);\n            } else {\n                return this.storage.set(STORAGE_KEY, [charId]);\n            }\n        });\n    }\n    //This method will make a favorite character became not favorite anymore. Its only possible if the character is already favorite\n    unfavouriteCharacter(charId) {\n        return this.getAllFavouriteCharacters().then(result => {\n            if (result) {\n                var index = result.indexOf(charId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEY, result);\n            }\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}